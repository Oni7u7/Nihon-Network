"use strict";var e=require("./analytics-event.js"),t=require("./api.js"),n=require("./apps.js"),s=require("./app-config.js"),o=require("./coinbase.js"),r=require("./core.js"),a=require("./cross-app.js"),p=require("./crypto-asset.js"),i=require("./custom-jwt-account.js"),u=require("./email.js"),l=require("./external-auth.js"),c=require("./farcaster.js"),I=require("./farcaster-signer.js"),x=require("./guest.js"),A=require("./identity-token.js"),h=require("./mfa.js"),d=require("./mfa-passkey.js"),m=require("./moonpay.js"),y=require("./oauth.js"),R=require("./oauth-provider.js"),S=require("./object.js"),E=require("./passkey.js"),T=require("./policy.js"),g=require("./recovery.js"),P=require("./siwe.js"),k=require("./siws.js"),W=require("./sms.js"),C=require("./smart-wallet-config.js"),O=require("./telegram.js"),f=require("./token.js"),M=require("./user.js"),v=require("./transaction-scanning.js"),w=require("./test-account.js"),F=require("./transaction.js"),b=require("../constants/oauth.js"),D=require("../constants/smart-wallets.js"),q=require("./wallet-api/wallets.js"),U=require("./wallet-api/key-quorums.js"),j=require("./wallet-api/export.js"),K=require("./wallet-api/user-signers.js"),L=require("./wallet-api/delegated-actions.js"),V=require("./webhooks/event-type.js"),_=require("./webhooks/event-catalog.js");require("zod"),require("@privy-io/api-base"),require("bs58"),require("libphonenumber-js/max"),require("viem"),require("./account-transfer.js"),exports.AnalyticsEventInput=e.AnalyticsEventInput,exports.AccountIdFromPath=t.AccountIdFromPath,exports.AppIdFromPath=t.AppIdFromPath,exports.Pagination=t.Pagination,exports.AppResponseSchema=n.AppResponseSchema,exports.EmbeddedWalletConfigSchema=s.EmbeddedWalletConfigSchema,exports.EmbeddedWalletInputSchema=s.EmbeddedWalletInputSchema,exports.FundingConfigResponseSchema=s.FundingConfigResponseSchema,exports.FundingMethodArraySchema=s.FundingMethodArraySchema,exports.FundingMethodEnum=s.FundingMethodEnum,exports.TelegramAuthConfigSchema=s.TelegramAuthConfigSchema,exports.CoinbaseOnRampInitInput=o.CoinbaseOnRampInitInput,exports.CoinbaseOnRampInitResponse=o.CoinbaseOnRampInitResponse,exports.CoinbaseOnRampStatusResponse=o.CoinbaseOnRampStatusResponse,exports.AuthenticateMode=r.AuthenticateMode,exports.Email=r.Email,exports.PasswordlessCode=r.PasswordlessCode,exports.PhoneNumber=r.PhoneNumber,exports.SolanaWalletAddress=r.SolanaWalletAddress,exports.UserId=r.UserId,exports.WalletAddress=r.WalletAddress,exports.isValidAddress=r.isValidAddress,exports.normalizeEthereumAddress=r.normalizeEthereumAddress,exports.normalizePhoneNumber=r.normalizePhoneNumber,exports.CrossAppConnectionsResponse=a.CrossAppConnectionsResponse,exports.Currency=p.Currency,exports.AuthenticateJwtInput=i.AuthenticateJwtInput,exports.AuthenticateEmailInput=u.AuthenticateEmailInput,exports.InitEmailInput=u.InitEmailInput,exports.TransferEmailInput=u.TransferEmailInput,exports.UnlinkEmailInput=u.UnlinkEmailInput,exports.UpdateEmailInput=u.UpdateEmailInput,exports.VerifyEmailInput=u.VerifyEmailInput,exports.JsonWebKey=l.JsonWebKey,exports.JsonWebKeySet=l.JsonWebKeySet,exports.FarcasterAuthenticateInput=c.FarcasterAuthenticateInput,exports.FarcasterConnectInitResponse=c.FarcasterConnectInitResponse,exports.FarcasterConnectStatusCompletedResponse=c.FarcasterConnectStatusCompletedResponse,exports.FarcasterConnectStatusPendingResponse=c.FarcasterConnectStatusPendingResponse,exports.FarcasterInitInput=c.FarcasterInitInput,exports.FarcasterLinkInput=c.FarcasterLinkInput,exports.FarcasterUnlinkInput=c.FarcasterUnlinkInput,exports.FarcasterV2AuthenticateInput=c.FarcasterV2AuthenticateInput,exports.FarcasterV2InitInput=c.FarcasterV2InitInput,exports.FarcasterV2InitResponse=c.FarcasterV2InitResponse,exports.TransferFarcasterInput=c.TransferFarcasterInput,exports.FarcasterSignerInitInput=I.FarcasterSignerInitInput,exports.FarcasterSignerInitResponse=I.FarcasterSignerInitResponse,exports.FarcasterSignerStatusResponse=I.FarcasterSignerStatusResponse,exports.AuthenticateGuestInput=x.AuthenticateGuestInput,exports.AppleOauthIdTokenEntry=A.AppleOauthIdTokenEntry,exports.CrossAppIdTokenEntry=A.CrossAppIdTokenEntry,exports.CustomJwtIdTokenEntry=A.CustomJwtIdTokenEntry,exports.DiscordOauthIdTokenEntry=A.DiscordOauthIdTokenEntry,exports.EmailIdTokenEntry=A.EmailIdTokenEntry,exports.FarcasterIdTokenEntry=A.FarcasterIdTokenEntry,exports.GithubOauthIdTokenEntry=A.GithubOauthIdTokenEntry,exports.GoogleOauthIdTokenEntry=A.GoogleOauthIdTokenEntry,exports.InstagramOauthIdTokenEntry=A.InstagramOauthIdTokenEntry,exports.LinkedInOauthIdTokenEntry=A.LinkedInOauthIdTokenEntry,exports.PasskeyIdTokenEntry=A.PasskeyIdTokenEntry,exports.PhoneIdTokenEntry=A.PhoneIdTokenEntry,exports.SmartWalletIdTokenEntry=A.SmartWalletIdTokenEntry,exports.SpotifyOauthIdTokenEntry=A.SpotifyOauthIdTokenEntry,exports.TelegramIdTokenEntry=A.TelegramIdTokenEntry,exports.TiktokOauthIdTokenEntry=A.TiktokOauthIdTokenEntry,exports.TwitterOauthIdTokenEntry=A.TwitterOauthIdTokenEntry,exports.WalletIdTokenEntry=A.WalletIdTokenEntry,exports.MfaSmsAuthenticateEnrollInput=h.MfaSmsAuthenticateEnrollInput,exports.MfaSmsEnrollInput=h.MfaSmsEnrollInput,exports.MfaSmsInitInput=h.MfaSmsInitInput,exports.MfaSmsVerifyInput=h.MfaSmsVerifyInput,exports.MfaTotpInput=h.MfaTotpInput,exports.MfaVerifyResponse=h.MfaVerifyResponse,exports.ResponseTotpInitMfa=h.ResponseTotpInitMfa,exports.MfaEnrollmentPasskeyInput=d.MfaEnrollmentPasskeyInput,exports.MfaPasskeyInitInput=d.MfaPasskeyInitInput,exports.MfaPasskeyVerifyInput=d.MfaPasskeyVerifyInput,exports.ResponsePasskeyInitMfa=d.ResponsePasskeyInitMfa,exports.MoonpayOnRampSignInput=m.MoonpayOnRampSignInput,exports.MoonpayOnRampSignResponse=m.MoonpayOnRampSignResponse,exports.AuthenticateOauthInput=y.AuthenticateOauthInput,exports.ExternalOAuthProvider=y.ExternalOAuthProvider,exports.LinkOAuthInput=y.LinkOAuthInput,exports.OAuthInitInput=y.OAuthInitInput,exports.OAuthInitResponse=y.OAuthInitResponse,exports.OAuthLinkResponse=y.OAuthLinkResponse,exports.OAuthProvider=y.OAuthProvider,exports.OAuthUnlinkInput=y.OAuthUnlinkInput,exports.TransferOAuthInput=y.TransferOAuthInput,exports.AuthorizationCodeInput=R.AuthorizationCodeInput,exports.EmptyObject=S.EmptyObject,exports.SuccessObject=S.SuccessObject,exports.PasskeyAuthenticateInput=E.PasskeyAuthenticateInput,exports.PasskeyAuthenticatorEnrollmentOptions=E.PasskeyAuthenticatorEnrollmentOptions,exports.PasskeyAuthenticatorEnrollmentResponse=E.PasskeyAuthenticatorEnrollmentResponse,exports.PasskeyAuthenticatorVerifyOptions=E.PasskeyAuthenticatorVerifyOptions,exports.PasskeyAuthenticatorVerifyResponse=E.PasskeyAuthenticatorVerifyResponse,exports.PasskeyInitInput=E.PasskeyInitInput,exports.PasskeyLinkInput=E.PasskeyLinkInput,exports.PasskeyRegisterInput=E.PasskeyRegisterInput,exports.ResponsePasskeyInitAuthenticate=E.ResponsePasskeyInitAuthenticate,exports.ResponsePasskeyInitLink=E.ResponsePasskeyInitLink,exports.ResponsePasskeyInitRegister=E.ResponsePasskeyInitRegister,exports.UnlinkPasskeyInput=E.UnlinkPasskeyInput,exports.BaseCondition=T.BaseCondition,exports.Condition=T.Condition,exports.ConditionOperator=T.ConditionOperator,exports.EthereumCalldataCondition=T.EthereumCalldataCondition,exports.EthereumTransactionCondition=T.EthereumTransactionCondition,exports.EthereumTypedDataDomainCondition=T.EthereumTypedDataDomainCondition,exports.EthereumTypedDataMessageCondition=T.EthereumTypedDataMessageCondition,exports.LegacyRule=T.LegacyRule,exports.PolicyAction=T.PolicyAction,exports.PolicyIdFromPath=T.PolicyIdFromPath,exports.PolicyResponse=T.PolicyResponse,exports.PolicyWithoutValidation=T.PolicyWithoutValidation,exports.Rule=T.Rule,exports.SolanaProgramInstruction=T.SolanaProgramInstruction,exports.SolanaSystemProgramInstruction=T.SolanaSystemProgramInstruction,exports.SolanaTokenProgramInstruction=T.SolanaTokenProgramInstruction,exports.UpdatePolicyInput=T.UpdatePolicyInput,exports.OAuthAuthenticateRecoveryResponse=g.OAuthAuthenticateRecoveryResponse,exports.OAuthCallbackICloudExpoInput=g.OAuthCallbackICloudExpoInput,exports.OAuthCallbackICloudExpoResponse=g.OAuthCallbackICloudExpoResponse,exports.OAuthInitICloudRecoveryInput=g.OAuthInitICloudRecoveryInput,exports.OAuthInitRecoveryInput=g.OAuthInitRecoveryInput,exports.RecoveryConfigurationICloudInput=g.RecoveryConfigurationICloudInput,exports.RecoveryConfigurationICloudResponse=g.RecoveryConfigurationICloudResponse,exports.RecoveryKeyMaterialInput=g.RecoveryKeyMaterialInput,exports.RecoveryKeyMaterialResponse=g.RecoveryKeyMaterialResponse,exports.AuthenticateSiweInput=P.AuthenticateSiweInput,exports.SiweAddressInput=P.SiweAddressInput,exports.SiweInitInput=P.SiweInitInput,exports.SiweInput=P.SiweInput,exports.SiweNonce=P.SiweNonce,exports.SmartWalletSiweInput=P.SmartWalletSiweInput,exports.TransferSiweInput=P.TransferSiweInput,exports.AuthenticateSiwsInput=k.AuthenticateSiwsInput,exports.SiwsAddressInput=k.SiwsAddressInput,exports.SiwsInitInput=k.SiwsInitInput,exports.SiwsInput=k.SiwsInput,exports.SiwsNonce=k.SiwsNonce,exports.AuthenticatePhoneInput=W.AuthenticatePhoneInput,exports.PasswordlessSmsPhoneInput=W.PasswordlessSmsPhoneInput,exports.TransferPhoneInput=W.TransferPhoneInput,exports.UnlinkPhoneInput=W.UnlinkPhoneInput,exports.UpdatePhoneInput=W.UpdatePhoneInput,exports.VerifyPhoneInput=W.VerifyPhoneInput,exports.AlchemyPaymasterContextSchema=C.AlchemyPaymasterContextSchema,exports.SmartWalletConfigurationInputSchema=C.SmartWalletConfigurationInputSchema,exports.SmartWalletConfigurationResponseSchema=C.SmartWalletConfigurationResponseSchema,exports.SmartWalletConfigurationSchema=C.SmartWalletConfigurationSchema,exports.SmartWalletNetworkConfigurationInputSchema=C.SmartWalletNetworkConfigurationInputSchema,exports.SmartWalletProvider=C.SmartWalletProvider,exports.TelegramAuthResult=O.TelegramAuthResult,exports.TelegramAuthenticateInput=O.TelegramAuthenticateInput,exports.TelegramLinkInput=O.TelegramLinkInput,exports.TelegramUnlinkInput=O.TelegramUnlinkInput,exports.TelegramWebAppData=O.TelegramWebAppData,exports.TransferTelegramInput=O.TransferTelegramInput,exports.OptionalRefreshTokenInput=f.OptionalRefreshTokenInput,exports.RefreshTokenInput=f.RefreshTokenInput,exports.AppleOauthAccount=M.AppleOauthAccount,exports.AuthenticatedUser=M.AuthenticatedUser,exports.AuthorizationKeyAccount=M.AuthorizationKeyAccount,exports.BaseWalletAccount=M.BaseWalletAccount,exports.BitcoinSegwitEmbeddedWalletAccount=M.BitcoinSegwitEmbeddedWalletAccount,exports.BitcoinTaprootEmbeddedWalletAccount=M.BitcoinTaprootEmbeddedWalletAccount,exports.CrossAppAccount=M.CrossAppAccount,exports.CrossAppEmbeddedWallet=M.CrossAppEmbeddedWallet,exports.CrossAppSmartWallet=M.CrossAppSmartWallet,exports.CustomJwtAccount=M.CustomJwtAccount,exports.CustomMetadata=M.CustomMetadata,exports.DiscordOauthAccount=M.DiscordOauthAccount,exports.EmailAccount=M.EmailAccount,exports.EthereumAccount=M.EthereumAccount,exports.EthereumEmbeddedWalletAccount=M.EthereumEmbeddedWalletAccount,exports.FarcasterAccount=M.FarcasterAccount,exports.GithubOauthAccount=M.GithubOauthAccount,exports.GoogleOauthAccount=M.GoogleOauthAccount,exports.InstagramOauthAccount=M.InstagramOauthAccount,exports.LinkedAccount=M.LinkedAccount,exports.LinkedInOauthAccount=M.LinkedInOauthAccount,exports.LinkedMfaMethod=M.LinkedMfaMethod,exports.LoggedOutUser=M.LoggedOutUser,exports.MaybeUser=M.MaybeUser,exports.OAuthTokens=M.OAuthTokens,exports.PasskeyAccount=M.PasskeyAccount,exports.PasskeyMfaMethod=M.PasskeyMfaMethod,exports.PhoneAccount=M.PhoneAccount,exports.SessionUpdateActionEnum=M.SessionUpdateActionEnum,exports.SmartWalletAccount=M.SmartWalletAccount,exports.SmsMfaMethod=M.SmsMfaMethod,exports.SolanaAccount=M.SolanaAccount,exports.SolanaEmbeddedWalletAccount=M.SolanaEmbeddedWalletAccount,exports.SpotifyOauthAccount=M.SpotifyOauthAccount,exports.TelegramAccount=M.TelegramAccount,exports.TiktokOauthAccount=M.TiktokOauthAccount,exports.TotpMfaMethod=M.TotpMfaMethod,exports.TwitterOauthAccount=M.TwitterOauthAccount,exports.UnifiedWalletAccount=M.UnifiedWalletAccount,exports.User=M.User,exports.UserWithIdentityToken=M.UserWithIdentityToken,exports.TransactionScanningInput=v.TransactionScanningInput,exports.TransactionScanningResponse=v.TransactionScanningResponse,exports.TestAccountIdFromPath=w.TestAccountIdFromPath,exports.TransactionIdFromPath=F.TransactionIdFromPath,exports.TransactionResponse=F.TransactionResponse,exports.SUPPORTED_OAUTH_PROVIDERS=b.SUPPORTED_OAUTH_PROVIDERS,exports.BICONOMY=D.BICONOMY,exports.COINBASE_SMART_WALLET=D.COINBASE_SMART_WALLET,exports.KERNEL=D.KERNEL,exports.LIGHT_ACCOUNT=D.LIGHT_ACCOUNT,exports.SAFE=D.SAFE,exports.SUPPORTED_SMART_WALLET_TYPES=D.SUPPORTED_SMART_WALLET_TYPES,exports.THIRDWEB=D.THIRDWEB,exports.AdditionalSignerInput=q.AdditionalSignerInput,exports.AuthorizationKeyDashboardResponse=q.AuthorizationKeyDashboardResponse,exports.AuthorizationKeyResponse=q.AuthorizationKeyResponse,exports.AuthorizationKeyRole=q.AuthorizationKeyRole,exports.BaseWalletApiCreateInput=q.BaseWalletApiCreateInput,exports.CAIP2=q.CAIP2,exports.ChainType=q.ChainType,exports.Cosmos=q.Cosmos,exports.CurrentTypedDataDomainInputParams=q.CurrentTypedDataDomainInputParams,exports.CurveSigningChainTypes=q.CurveSigningChainTypes,exports.CurveType=q.CurveType,exports.ECDSA=q.ECDSA,exports.EdDSA=q.EdDSA,exports.FirstClassChainTypes=q.FirstClassChainTypes,exports.HDPath=q.HDPath,exports.Hash=q.Hash,exports.Hex=q.Hex,exports.KeyQuorumId=q.KeyQuorumId,exports.LegacyTypedDataDomainInputParams=q.LegacyTypedDataDomainInputParams,exports.OwnerInput=q.OwnerInput,exports.OwnerInputFields=q.OwnerInputFields,exports.P256PublicKey=q.P256PublicKey,exports.Quantity=q.Quantity,exports.SigningAlgorithm=q.SigningAlgorithm,exports.Stellar=q.Stellar,exports.TypedDataDomainInputParams=q.TypedDataDomainInputParams,exports.TypedDataTypesInputParams=q.TypedDataTypesInputParams,exports.UnsignedEthereumTransaction=q.UnsignedEthereumTransaction,exports.WalletApiCreateInput=q.WalletApiCreateInput,exports.WalletApiCreateResponse=q.WalletApiCreateResponse,exports.WalletApiEthereumPersonalSignRpcInput=q.WalletApiEthereumPersonalSignRpcInput,exports.WalletApiEthereumPersonalSignRpcInputParams=q.WalletApiEthereumPersonalSignRpcInputParams,exports.WalletApiEthereumPersonalSignRpcResponse=q.WalletApiEthereumPersonalSignRpcResponse,exports.WalletApiEthereumRpcInput=q.WalletApiEthereumRpcInput,exports.WalletApiEthereumSecp256k1SignRpcInput=q.WalletApiEthereumSecp256k1SignRpcInput,exports.WalletApiEthereumSecp256k1SignRpcResponse=q.WalletApiEthereumSecp256k1SignRpcResponse,exports.WalletApiEthereumSendTransactionRpcInput=q.WalletApiEthereumSendTransactionRpcInput,exports.WalletApiEthereumSendTransactionRpcResponse=q.WalletApiEthereumSendTransactionRpcResponse,exports.WalletApiEthereumSignTransactionRpcInput=q.WalletApiEthereumSignTransactionRpcInput,exports.WalletApiEthereumSignTransactionRpcResponse=q.WalletApiEthereumSignTransactionRpcResponse,exports.WalletApiEthereumSignTypedDataRpcInput=q.WalletApiEthereumSignTypedDataRpcInput,exports.WalletApiEthereumSignTypedDataRpcResponse=q.WalletApiEthereumSignTypedDataRpcResponse,exports.WalletApiExportPrivateKeyRpcInput=q.WalletApiExportPrivateKeyRpcInput,exports.WalletApiExportPrivateKeyRpcResponse=q.WalletApiExportPrivateKeyRpcResponse,exports.WalletApiRawSignInput=q.WalletApiRawSignInput,exports.WalletApiRawSignResponse=q.WalletApiRawSignResponse,exports.WalletApiRegisterAuthorizationKeyInput=q.WalletApiRegisterAuthorizationKeyInput,exports.WalletApiRevokeAuthorizationKeyInput=q.WalletApiRevokeAuthorizationKeyInput,exports.WalletApiRpcInput=q.WalletApiRpcInput,exports.WalletApiRpcResponse=q.WalletApiRpcResponse,exports.WalletApiSolanaRpcInput=q.WalletApiSolanaRpcInput,exports.WalletApiSolanaSignAndSendTransactionRpcInput=q.WalletApiSolanaSignAndSendTransactionRpcInput,exports.WalletApiSolanaSignAndSendTransactionRpcResponse=q.WalletApiSolanaSignAndSendTransactionRpcResponse,exports.WalletApiSolanaSignMessageRpcInput=q.WalletApiSolanaSignMessageRpcInput,exports.WalletApiSolanaSignMessageRpcResponse=q.WalletApiSolanaSignMessageRpcResponse,exports.WalletApiSolanaSignTransactionRpcInput=q.WalletApiSolanaSignTransactionRpcInput,exports.WalletApiSolanaSignTransactionRpcResponse=q.WalletApiSolanaSignTransactionRpcResponse,exports.WalletIdFromPath=q.WalletIdFromPath,exports.WalletResponse=q.WalletResponse,exports.WalletUpdateInput=q.WalletUpdateInput,exports.WalletsSearchInput=q.WalletsSearchInput,exports.CreateKeyQuorumInput=U.CreateKeyQuorumInput,exports.KeyQuorumIdFromPath=U.KeyQuorumIdFromPath,exports.UpdateKeyQuorumInput=U.UpdateKeyQuorumInput,exports.PrivateKeyExportInput=j.PrivateKeyExportInput,exports.PrivateKeyExportResponse=j.PrivateKeyExportResponse,exports.ImportCustomJwtAccountInput=K.ImportCustomJwtAccountInput,exports.ImportEmailAccountInput=K.ImportEmailAccountInput,exports.UserSignersAuthenticateInput=K.UserSignersAuthenticateInput,exports.UserSignersAuthenticateResponse=K.UserSignersAuthenticateResponse,exports.WalletsWithRecoveryRequest=K.WalletsWithRecoveryRequest,exports.WalletsWithRecoveryResponse=K.WalletsWithRecoveryResponse,exports.DelegatedActionsConsentInput=L.DelegatedActionsConsentInput,exports.WalletApiRevokeResponse=L.WalletApiRevokeResponse,exports.AuthenticationEvent=V.AuthenticationEvent,exports.EventType=V.EventType,exports.EventTypes=V.EventTypes,exports.FundsTransferEvent=V.FundsTransferEvent,exports.MfaEvent=V.MfaEvent,exports.PrivateKeyExportedEvent=V.PrivateKeyExportedEvent,exports.TransactionEvent=V.TransactionEvent,exports.EMBEDDED_WALLET_RECOVERY_TYPES=_.EMBEDDED_WALLET_RECOVERY_TYPES;
